// REM sizing
@function calculateRem($size) {
    $remSize: $size / 16px;
    @return $remSize * 1rem;
}

@mixin font-size($size) {
    font-size: $size;
    font-size: calculateRem($size);
}

// Simple transition mixin.
@mixin transition($args...) {
    -webkit-transition: $args;
    -moz-transition: $args;
    -ms-transition: $args;
    -o-transition: $args;
    transition: $args;
}

@mixin row-list($padding: 1em, $childs: "li") {
    list-style: none;
    margin: 0; padding: 0;

    #{$childs} {
        display: inline-block;
        vertical-align: top;

        & + #{$childs} {
            margin-left: $padding;
        }
    }
}

// Simple animation mixin.
/* USAGE **********************************
@include keyframes(slide-down) {
0% { opacity: 1; }
90% { opacity: 0; }
}

.element {
width: 100px;
height: 100px;
background: black;
@include animation('slide-down 5s 3');
}
*******************************************/

@mixin keyframes($animation-name) {
    @-webkit-keyframes $animation-name {
        @content;
    }
    @-moz-keyframes $animation-name {
        @content;
    }
    @-ms-keyframes $animation-name {
        @content;
    }
    @-o-keyframes $animation-name {
        @content;
    }
    @keyframes $animation-name {
        @content;
    }
}

@mixin animation($str) {
    -webkit-animation: #{$str};
    -moz-animation: #{$str};
    -ms-animation: #{$str};
    -o-animation: #{$str};
    animation: #{$str};
}

@mixin bg-cover($url: false) {
    -webkit-background-size: cover;
    -moz-background-size: cover;
    -o-background-size: cover;
    background-size: cover;
    background-position: center center;

    @if($url) {
        background-image: url(#{$url});
        -ms-filter: "progid:DXImageTransform.Microsoft.AlphaImageLoader(src='"#{$url}"', sizingMethod='scale')";
        filter: progid:DXImageTransform.Microsoft.AlphaImageLoader(src='"#{$url}"', sizingMethod='scale');
    }
}

@mixin clear {
    content: '';
    clear: both;
    display: block;
}
@mixin clearfix(){
    &:before,
    &:after {
    content: " ";
    display: table;
    }

    &:after {
        clear: both;
    }
   *zoom: 1;
}

@mixin breakpoint($point, $value: 0) {
    @if $point == "mobile-landscape" {
        @media (min-width: 480px) { @content; }
    }
}

@mixin placeholder {
  ::-webkit-input-placeholder {@content}
  :-moz-placeholder           {@content}
  ::-moz-placeholder          {@content}
  :-ms-input-placeholder      {@content}  
}

@mixin grid($cols: 1, $gutter: 0, $childs: ".item") { 
    @include clearfix;
    width: auto;
    margin-right: -$gutter;
 
    #{$childs} {
        float: left;
        width: (100% / $cols);
 
        padding-right: $gutter;
        background-clip: content-box;
    }
}